@import url("https://fonts.googleapis.com/css2?family=Ultra&display=swap");
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  text-decoration: none;
  list-style-type: none;
}

.container {
  max-width: 1200px;
  padding: 0 20px;
  margin: 0 auto;
}

.main__container {
  padding-top: 50px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 30px;
  h1 {
    font-size: 40px;
    font-family: "Ultra", serif;
    margin: 0;
  }
  .input__block {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 10px;
    .search-input {
      width: 60%;
      margin: 0 !important;
    }
    .groups-select {
      color: white;
      width: 14%;
    }
    .address-filter {
      color: white;
      width: 14%;
    }
    #add {
      width: 12%;
    }
  }
  .table-students {
    tbody {
      tr {
        .end {
          display: flex;
          justify-content: space-around;
          .edit,
          .delete {
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 5px;
          }
        }
      }
    }
  }
}

#studentModal {
  height: 100vh;
  width: 100vw;
  background-color: #0051ff50;
  .modal-dialog {
    .modal-content {
      .modal-body {
        display: flex;
        flex-direction: column;
        gap: 7px;
        label {
          padding-bottom: 7px;
          cursor: pointer;
        }
        .bottom {
          display: grid;
          grid-template-columns: repeat(2, 1fr);
          grid-gap: 7px;
        }
        .groups {
          grid-column-start: 1;
          grid-column-end: 3;
        }
        .ismarried {
          margin-top: 10px;
          display: flex;
          align-items: center;
          gap: 10px;
          label,
          input {
            padding: 0;
            margin: 0;
          }
        }
      }
    }
  }
}

$background: #cbcbcb;
$leftFace: #d53a33;
$rightFace: #e79c10;
$topFace: #1d9099;
$scale: 1;
$duration: 3s;
$timingFunction: ease;

.loading {
  height: 100vh;
  width: 100vw;
  position: fixed;
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: $background;
  transition: 0.5s;
}
.loading-none {
  display: none;
  transition: 0.5s;
}
.loading-content {
  transform: scale(#{$scale * 0.5});
  position: relative;
}

.cube {
  position: absolute;
  width: 86px;
  height: 100px;
}

.right {
  background: $rightFace;
  transform: rotate(-30deg) skewX(-30deg) translate(49px, 65px) scaleY(0.86);
}

.left {
  background: $leftFace;
  transform: rotate(90deg) skewX(-30deg) scaleY(0.86) translate(25px, -50px);
}

.top {
  background: $topFace;
  transform: rotate(210deg) skew(-30deg) translate(-75px, -22px) scaleY(0.86);
  z-index: 2;
}

.face {
  height: 50px;
  width: 50px;
  position: absolute;
  transform-origin: 0 0;
}

@mixin slice($h, $w, $l) {
  .h#{$h}.w#{$w}.l#{$l} {
    z-index: (-#{$h});
    animation-name: h#{$h}w#{$w}l#{$l};
    animation-timing-function: $timingFunction;
    animation-duration: $duration;
    animation-iteration-count: infinite;
  }
  @keyframes h#{$h}w#{$w}l#{$l} {
    0% {
      transform: translate(
        ($w * -50% - 50%) + ($l * 50% + 50%),
        ($h * 50 - 200%) + ($w * 25% - 25%) + ($l * 25 + 25%)
      );
    }
    14% {
      transform: translate(
        ($w * -50% - 50%) + ($l * 100% - 50%),
        ($h * 50 - 200%) + ($w * 25% - 25%) + ($l * 50 - 25%)
      );
    }
    28% {
      transform: translate(
        ($w * -100% + 50%) + ($l * 100% - 50%),
        ($h * 50 - 200%) + ($w * 50% - 75%) + ($l * 50 - 25%)
      );
    }
    43% {
      transform: translate(
        ($w * -100% - 100%) + ($l * 100% + 100%),
        ($h * 100 - 400%) + ($w * 50% - 50%) + ($l * 50 + 50%)
      );
    }
    57% {
      transform: translate(
        ($w * -100% - 100%) + ($l * 50% + 200%),
        ($h * 100 - 400%) + ($w * 50% - 50%) + ($l * 25 + 100%)
      );
    }
    71% {
      transform: translate(
        ($w * -50% - 200%) + ($l * 50% + 200%),
        ($h * 100 - 375%) + ($w * 25% - 25%) + ($l * 25 + 100%)
      );
    }
    85% {
      transform: translate(
        ($w * -50% - 50%) + ($l * 50% + 50%),
        ($h * 50 - 200%) + ($w * 25% - 25%) + ($l * 25 + 25%)
      );
    }
    100% {
      transform: translate(
        ($w * -50% - 50%) + ($l * 50% + 50%),
        ($h * 50 - 200%) + ($w * 25% - 25%) + ($l * 25 + 25%)
      );
    }
  }
}

@mixin generateSlice() {
  @for $i from 1 to 4 {
    @for $j from 1 to 4 {
      @for $k from 1 to 4 {
        @include slice($i, $j, $k);
      }
    }
  }
}

@include generateSlice();
